{"version":3,"sources":["scripts/main.js"],"names":["tablGamme","document","querySelector","buttonStart","messageStart","messageWin","messageOver","rows","columns","score","gammeBoard","setGame","r","c","tile","cells","num","id","toString","updateTile","setRandomInEmptyCell","emptyTile","moves","col","row","found","Math","floor","random","getElementById","innerText","classList","add","value","remove","filterZero","filter","doubling","rowTemp","i","length","push","slideLeft","slideRight","reverse","slideUp","slideDown","addEventListener","e","code","style","color"],"mappings":"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","file":"main.5167b8fd.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tablGamme = document.querySelector('.game-field');\nconst buttonStart = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageOver = document.querySelector('.message-over');\nconst rows = 4;\nconst columns = 4;\nlet score = 0;\nlet gammeBoard = [];\n\nbuttonStart.addEventListener('click', () => {\n  buttonStart.classList.value = '';\n  buttonStart.classList.add('button', 'restart');\n  buttonStart.innerText = 'Restart';\n  messageStart.classList.add('hidden');\n  messageOver.classList.add('hidden');\n  document.querySelector('.game-score').innerText = 0;\n  setGame();\n});\n\nfunction setGame() {\n  gammeBoard = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = tablGamme.rows[r].cells[c];\n      const num = gammeBoard[r][c];\n\n      tile.id = r.toString() + c.toString();\n      updateTile(tile, num);\n    }\n  }\n  setRandomInEmptyCell();\n  setRandomInEmptyCell();\n}\n\nfunction emptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (gammeBoard[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction moves() {\n  for (let r = 0; r < rows - 1; r++) {\n    for (let c = 0; c < columns - 1; c++) {\n      if ((gammeBoard[r][c] === gammeBoard[r][c + 1])\n        || (gammeBoard[r][c] === 0)) {\n        return true;\n      }\n    }\n  }\n\n  for (let col = 0; col < columns - 1; col++) {\n    for (let row = 0; row < rows - 1; row++) {\n      if ((gammeBoard[row][col] === gammeBoard[row + 1][col])\n        || (gammeBoard[row][col] === 0)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction setRandomInEmptyCell() {\n  if (!emptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (gammeBoard[r][c] === 0) {\n      gammeBoard[r][c] = Math.random() < 0.9 ? 2 : 4;\n\n      const tile = document.getElementById(r.toString() + c.toString());\n\n      tile.innerText = `${gammeBoard[r][c]}`;\n      tile.classList.add(`field-cell--${gammeBoard[r][c]}`);\n      found = true;\n    }\n  }\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('field-cell');\n\n  if (num > 0) {\n    tile.innerText = num;\n\n    if (num < 2048) {\n      tile.classList.add('field-cell--' + num.toString());\n    }\n\n    if (num === 2048) {\n      tile.classList.add('field-cell--' + num.toString());\n      messageWin.classList.remove('hidden');\n    }\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  switch (e.code) {\n    case 'ArrowLeft':\n      slideLeft();\n      setRandomInEmptyCell();\n      moves();\n\n      break;\n\n    case 'ArrowRight':\n      // flagEnd = score;\n      slideRight();\n      setRandomInEmptyCell();\n      moves();\n\n      break;\n\n    case 'ArrowUp':\n      slideUp();\n      setRandomInEmptyCell();\n      moves();\n\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      setRandomInEmptyCell();\n      moves();\n\n      break;\n  }\n\n  if (!moves()) {\n    messageOver.classList.remove('hidden');\n    messageOver.style.color = '#f87474';\n  }\n\n  document.querySelector('.game-score').innerText = score;\n});\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction doubling(rowTemp) {\n  let row = filterZero(rowTemp);\n\n  for (let i = 0; i < row.length; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row[i + 1] = 0;\n      score += row[i];\n    }\n  }\n\n  row = filterZero(row);\n\n  while (row.length < columns) {\n    row.push(0);\n  }\n\n  return row;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = gammeBoard[r];\n\n    row = doubling(row);\n    gammeBoard[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + c.toString());\n      const num = gammeBoard[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = gammeBoard[r];\n\n    row.reverse();\n    row = doubling(row);\n    row.reverse();\n    gammeBoard[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + c.toString());\n      const num = gammeBoard[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [\n      gammeBoard[0][c],\n      gammeBoard[1][c],\n      gammeBoard[2][c],\n      gammeBoard[3][c],\n    ];\n\n    row = doubling(row);\n\n    for (let r = 0; r < rows; r++) {\n      gammeBoard[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + c.toString());\n\n      const num = gammeBoard[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [\n      gammeBoard[0][c],\n      gammeBoard[1][c],\n      gammeBoard[2][c],\n      gammeBoard[3][c],\n    ];\n\n    row.reverse();\n    row = doubling(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      gammeBoard[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + c.toString());\n\n      const num = gammeBoard[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n"]}